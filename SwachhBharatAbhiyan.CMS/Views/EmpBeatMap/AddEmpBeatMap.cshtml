@model SwachBharat.CMS.Bll.ViewModels.ChildModel.Model.EmpBeatMapVM

@{
    Layout = null;
}

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #googleMap {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #floating-panel {
        position: absolute;
        top: 0px;
        left: 5%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }

    #floating-panel {
        margin-left: -10px;
    }

    .btn-success:focus {
        background-color: #189cdf !important;
        border-color: #189cdf !important;
    }

    .btn-success:active:not(:disabled):not(.disabled), .btn-success.active:not(:disabled):not(.disabled), .show > .btn-success.dropdown-toggle {
        background-color: #189cdf !important;
        border-color: #189cdf !important;
    }
</style>
<fieldset>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link href="~/Content/css/datepicker/css/datepicker.css" rel="stylesheet" />
    <link href="~/Content/css/index_style.css" rel="stylesheet" />
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.4/jquery-confirm.min.js" integrity="sha512-zP5W8791v1A6FToy+viyoyUUyjCzx+4K8XZCKzW28AnCoepPNIXecxh9mvGuy3Rt78OzEsU+VCvcObwAMvBAww==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>*@
    <br />
    <div class="container">
        <div class="row">
            <div class="col-sm-6">

                <input type="hidden" value="@ViewBag.lat" id="deflat" />
                <input type="hidden" value="@ViewBag.lang" id="deflang" />
                <input type="hidden" value="@Model.ebmId" id="hdebmId" />
                <input type="hidden" value="@Model.userId" id="hduserId" />
                <input type="hidden" value="@Model.userName" id="hduserName" />
                <input type="hidden" value="@Model.Type" id="hduserType" />
                <input type="hidden" id="txt_fdate" class="datepicker form-control form-control-sm" type="text" />

                @*<label>तारीख निवडा / Select Date</label>*@

                @*<label>कर्मचारी निवडा / Select Employee</label>*@
                <div id="divUserList" class="row" style="display:none">
                    <div class="col-sm-6">
                        <label>Select Employee Type</label>
                        <select id="selectEmpType" class="form-control minimal-form  RequiredInput validate[required] RequiredInput">
                            <option value="0">Select Employee Type</option>
                            <option value="W">Waste</option>
                            <option value="D">Dump</option>
                        </select>
                    </div>
                    <div class="col-sm-6">
                        <label>Select Employee</label>
                        <select id="selectEmp" class="form-control minimal-form  RequiredInput validate[required] RequiredInput"></select>
                    </div>

                </div>
                <div id="divUserName" style="display:none">
                    <label>Employee Name :</label><b><span id="spnUserName"></span></b>
                </div>
            </div>
            <div class="col-sm-3">

                <div>
                    <button type="button" class="btn btn-primary save" id="btnEMPSave">Save</button>
                </div>
            </div>

            <div class="col-sm-3">
                <a href="Index" id="AH" class="btn btn-primary btn-sm " style="float: right;" type="button">Back</a>
            </div>
        </div>
        <div class="row">
            <div style="border: 1px solid #cccccc; width: 35%; margin-right: 5%; border-radius: 4px; padding: 3px;"> <span style="font-weight: bold; font-size: 14px;">House Count :</span><span style="font-weight: bold; font-size: 14px; margin-right: 4%" id="spnInner">0</span></div><br />
            <div style="border: 1px solid #cccccc; width: 35%; border-radius: 4px; padding: 3px; display:none">
                <span style="font-weight: bold; font-size: 14px;">Outer Count :</span><span style="font-weight: bold; font-size: 14px;" id="spnOuter">0</span>
            </div>
        </div>
        <div>
            <p class="text-center"><b><span class="text-danger" id="BeatMaap_pop"></span></b></p>
        </div>
    </div><br />
    <div class="container ">
        <div class="row" style="position:relative; height:650px;">
            <p id="wait" style="display:none;position:absolute;top:35%;left:50%;">
                <img class="rotate_img" src="~/Content/images/img/marker24.png">
            </p>
            <div class="col-10 bg-white has-shadow" id="googleMap" style="width:auto; height:600px"></div>
            <div class="col-sm-2"></div>
        </div>
    </div>
    <style>

        button[title="Stop drawing"] {
            /* content: url(https://cdn4.iconfinder.com/data/icons/whsr-january-flaticon-set/128/compass.png) !important;*/
            height: 40px;
            width: 40px;
            /* cursor: pointer;*/
            box-shadow: rgb(0 0 0) 0px 1px 4px -1px !important;
            text-align: center !important;
        }

            button[title="Stop drawing"] span div {
                width: 24px !important;
                height: 21px !important;
            }

                button[title="Stop drawing"] span div img {
                    top: -86px !important;
                    width: 23px !important;
                    height: 212px !important;
                }

        button[title="Draw a shape"] {
            /* content: url(https://cdn4.iconfinder.com/data/icons/whsr-january-flaticon-set/128/compass.png) !important;*/
            height: 40px;
            width: 40px;
            /* cursor: pointer;*/
            box-shadow: rgb(0 0 0) 0px 1px 4px -1px !important;
            text-align: center !important;
        }

            button[title="Draw a shape"] span div {
                width: 24px !important;
                height: 21px !important;
            }

                button[title="Draw a shape"] span div img {
                    top: -74px !important;
                    width: 23px !important;
                    height: 225px !important;
                }
    </style>
    <script>
        $(document).ready(function () {
            //$.ajax({
            //    type: "get",
            //    url: "/EmpBeatMap/ListUserBeatMap",
            //    contentType: 'application/json;',
            //    dataType: 'json',
            //    //traditional: true,
            //    success: function (data) {
            //        district = '<option value="-1">Select Employee</option>';
            //        for (var i = 0; i < data.length; i++) {
            //            district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
            //        }
            //        //district = district + '</select>';
            //        $('#selectEmp').html(district);
            //    }
            //});
            //runMaps();
        });


        $('#selectEmpType').on('change', function () {
            $('#hduserType').val((this.value));
            LoadEmpList();
            runMaps();
        });

        function LoadEmpList() {
            var Emptype = $("#selectEmpType").val();
            $.ajax({
                type: "get",
                url: "/EmpBeatMap/ListUserBeatMap?Emptype=" + Emptype,
                contentType: 'application/json;',
                dataType: 'json',
                //traditional: true,
                success: function (data) {
                    district = '<option value="-1">Select Employee</option>';
                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    //district = district + '</select>';
                    $('#selectEmp').html(district);
                }
            });


        }
        $('#selectEmp').on('change', function () {

            $('#hduserId').val((this.value));
        });
        //User Wise Location
        // All User On Map

    </script>
    <script type="text/javascript">

        var polyArr = [];
        var selectedShape;
        var arrCoordinate = [];
        var polyDragStart;
        var polyDragStartCords = [];
        var map;
        var curIndexId = 0;
        var runMaps = function () {
            arrCoordinate = @Html.Raw(Json.Encode(@Model.ebmLatLong));
            debugger;
            $.ajax({
                type: "post",
                url: "/Location/HouseLocationListForEmpBitMap?Emptype=" + $("#hduserType").val() + "&ebmId=" + $("#hdebmId").val(),
                //url: "/Location/HouseLocationList",
                datatype: "json",
                traditional: true,
                success: function (data) {
                    debugger;
                    data.length

                    var innerCount = 0;
                    var outerCount = 0;
                    var infowindow = new google.maps.InfoWindow();
                    bounds = new google.maps.LatLngBounds();
                    var marker, i;

                    var gar_type;
                    for (i = 0; i < data.length; i++) {
                        if (arrCoordinate) {
                            if (data[i].IsIn == true && arrCoordinate.length > 0) {
                                innerCount++;

                            } else if (data[i].IsIn == false && arrCoordinate.length > 0) {

                                outerCount++;
                            }
                        }
                        //debugger;
                        gar_type = data[i].garbageType

                        var mUrl = "../Content/images/img/segregationImg/icn_house.png";

                        if (data[i].dyid != 0) {
                            var mUrl = "../Content/images/img/segregationImg/Dumpyard_marker.png";

                        }
                        switch (gar_type) {

                            case 0:
                                mUrl = "../Content/images/img/segregationImg/icn_mixed_garbage.png"
                                break;
                            case 1:
                                mUrl = "../Content/images/img/segregationImg/icn_segregated_garbage.png"
                                break;
                            case 2:
                                mUrl = "../Content/images/img/segregationImg/icn_garbage_not_recevied.png"
                                break;
                            case 3:
                                mUrl = "../Content/images/img/segregationImg/icn_not_specified.png"
                                break;
                        }

                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(data[i].houseLat, data[i].houseLong),
                            map: map,

                            icon: {
                                // labelOrigin: new google.maps.Point(16, 65),
                                url: mUrl
                            }

                        });

                        loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());

                        bounds.extend(loc);

                        if (gar_type != null) {
                            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                                return function () {
                                    var poptext = '<div class=infowindow style="max-width:190px"> <h4 style="text-transform: capitalize;">' + data[i].houseOwnerName + '</h4><p><b>House Id: </b>' + data[i].ReferanceId + '</p>';
                                    if (data[i].houseOwnerMobile != '') {
                                        poptext = poptext + '<p><b>Mobile: </b>' + data[i].houseOwnerMobile + '</p>';
                                    }
                                    if (data[i].houseAddress != '') {
                                        poptext = poptext + '<p><b>Address: </b>' + data[i].houseAddress + '<p>';
                                    }
                                    poptext = poptext + '<b>Date: </b>' + data[i].gcDate + '</p><div style="height:auto; width:150px"><p><b>Time: </b>' + data[i].gcTime + '</p></div></div>';
                                    infowindow.setContent(poptext);
                                    infowindow.open(map, marker);
                                }
                            })(marker, i));
                        }

                        else if (data[i].dyid != 0) {

                            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                                return function () {
                                    var poptext = '<div class=infowindow style="max-width:190px"> <h4 style="text-transform: capitalize;">' + data[i].houseOwnerName + '</h4><p><b>Dump Yard Id: </b>' + data[i].ReferanceId + '</p>'
                                    if (data[i].houseOwnerMobile != '') {
                                        poptext = poptext + '<p><b>Mobile: </b>' + data[i].houseOwnerMobile + '</p>';
                                    }
                                    if (data[i].houseAddress != '') {
                                        poptext = poptext + '<p><b>Address: </b>' + data[i].houseAddress + '</p>';
                                    }
                                    poptext = poptext + '</div>';
                                    infowindow.setContent(poptext);
                                    infowindow.open(map, marker);
                                }
                            })(marker, i));
                        }
                        else {
                            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                                return function () {
                                    var poptext = '<div class=infowindow style="max-width:190px"> <h4 style="text-transform: capitalize;">' + data[i].houseOwnerName + '</h4><p><b>House Id: </b>' + data[i].ReferanceId + '</p>'
                                    if (data[i].houseOwnerMobile != '') {
                                        poptext = poptext + '<p><b>Mobile: </b>' + data[i].houseOwnerMobile + '</p>';
                                    }
                                    if (data[i].houseAddress != '') {
                                        poptext = poptext + '<p><b>Address: </b>' + data[i].houseAddress + '</p>';
                                    }
                                    poptext = poptext + '</div>';
                                    infowindow.setContent(poptext);
                                    infowindow.open(map, marker);
                                }
                            })(marker, i));
                        }
                    }

                    $("#spnInner").text(innerCount);
                    $("#spnOuter").text(outerCount);
                }
            });
             map = new google.maps.Map(document.getElementById('googleMap'), {
                 zoom: 16,
                 //controlSize: 100,
                center: new google.maps.LatLng($('#deflat').val(), $('#deflang').val()),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            if ($("#hdebmId").val() == '-1') {
                $("#divUserList").show();
                $("#divUserName").hide();
            }
            else {

                $("#divUserList").hide();
                $("#divUserName").show();
                $("#spnUserName").text($("#hduserName").val());
                arrCoordinate = @Html.Raw(Json.Encode(@Model.ebmLatLong));





                if (arrCoordinate.length > 0) {

                    map = new google.maps.Map(document.getElementById('googleMap'), {
                        zoom: 16,
                        //controlSize:100,
                        center: new google.maps.LatLng(arrCoordinate[0][0].lat, arrCoordinate[0][0].lng),
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    });
                    for (let i = 0; i < arrCoordinate.length;i++) {
                        var polyOld = new google.maps.Polygon({
                            paths: arrCoordinate[i],
                            clickable: true,
                            draggable: false,
                            editable: false,
                            fillColor: '#ffff00',
                            fillOpacity: 0.2,
                            indexID:i
                        });


                        polyOld.setMap(map);
                        //polyArr = [];
                        polyArr.push(polyOld);
                        //addListenersOnPolygon(polyOld);
                        var addListenersOnPolygon = function(poly){
                            google.maps.event.addListener(poly.getPath(), 'insert_at', function () {
                                console.log(poly.indexID);
                                var newShape = poly;
                                newShape.indexID = selectedShape.indexID;

                                polyArr.forEach((element, index) => {
                                    if (element.indexID === selectedShape.indexID) {
                                        polyArr[index] = newShape;
                                    }
                                });
                                //polyArr = [];
                                //polyArr.push(polyOld);

                            });
                            google.maps.event.addListener(poly.getPath(), 'remove_at', function () {
                                console.log(poly.indexID);

                                var newShape = poly;
                                newShape.indexID = selectedShape.indexID;

                                polyArr.forEach((element, index) => {
                                    if (element.indexID === selectedShape.indexID) {
                                        polyArr[index] = newShape;
                                    }
                                });

                            });
                            google.maps.event.addListener(poly.getPath(), 'set_at', function () {
                                console.log(poly.indexID);

                                var newShape = poly;
                                newShape.indexID = selectedShape.indexID;

                                polyArr.forEach((element, index) => {
                                    if (element.indexID === selectedShape.indexID) {
                                        polyArr[index] = newShape;
                                    }
                                });
                            });
                            google.maps.event.addListener(poly, 'dragend', function () {
                                console.log(poly.indexID);

                                //$.confirm('Are you sure you want change position of Polygon ?', {
                                //    em: 'Emphasized Text',
                                //    title: 'Change Polygon!',
                                //    callEvent: function () {
                                //        polyArr = [];
                                //        polyArr.push(polyOld);
                                //    },
                                //    cancelEvent: function () {
                                //        polyOld.setMap(null);
                                //        console.log('dragend');
                                //        //polyOld = polyDragStart;
                                //        polyOld.setPaths(polyDragStartCords);
                                //        //var poligonCoords = [];
                                //        console.log('dragend');
                                //        //poligonCoords = getCoords(polyDragStart[0]);
                                //        //polyOld = new google.maps.Polygon({
                                //        //    paths: polyDragStartCords,
                                //        //    clickable: true,
                                //        //    draggable: true,
                                //        //    editable: true,
                                //        //    fillColor: '#ffff00',
                                //        //    fillOpacity: 0.2,
                                //        //});
                                //        //console.log(pathArrTemp);
                                //        //polyOld.setMap(null);
                                //        polyOld.setMap(map);
                                //        polyArr = [];
                                //        polyArr.push(polyOld);
                                //    },
                                //    cancelButton: 'No!'
                                //});



                                if (confirm('Are you sure you want change position of Area ?')) {
                                    var newShape = poly;
                                    newShape.indexID = selectedShape.indexID;

                                    polyArr.forEach((element, index) => {
                                        if (element.indexID === selectedShape.indexID) {
                                            polyArr[index] = newShape;
                                        }
                                    });

                                } else {
                                    poly.setMap(null);
                                    console.log('dragend');
                                    //polyOld = polyDragStart;
                                    poly.setPaths(polyDragStartCords);
                                    //var poligonCoords = [];
                                    //poligonCoords = getCoords(polyDragStart[0]);
                                    //polyOld = new google.maps.Polygon({
                                    //    paths: polyDragStartCords,
                                    //    clickable: true,
                                    //    draggable: true,
                                    //    editable: true,
                                    //    fillColor: '#ffff00',
                                    //    fillOpacity: 0.2,
                                    //});
                                    //console.log(pathArrTemp);
                                    //polyOld.setMap(null);
                                    poly.setMap(map);
                                    var newShape = poly;
                                    newShape.indexID = selectedShape.indexID;

                                    polyArr.forEach((element, index) => {
                                        if (element.indexID === selectedShape.indexID) {
                                            polyArr[index] = newShape;
                                        }
                                    });
                                    addListenersOnPolygon2(poly);
                                    //polyOld.setMap(map);
                                    //console.log(polyDragStart.length);

                                    //polyDragStart[0].setMap(map);
                                }


                            });
                            google.maps.event.addListener(poly, 'dragstart', function () {
                                console.log('dragstart');
                                polyDragStart = poly;
                                polyDragStartCords = getCoords(poly);


                            });


                            google.maps.event.addListener(poly, 'click', function () {
                                console.log(poly.indexID);

                                setSelection(poly);
                            });
                        }

                        addListenersOnPolygon(polyOld);
                    }

                    curIndexId = arrCoordinate.length;
                }


            }

            var addListenersOnPolygon2 = function (poly) {
                google.maps.event.addListener(poly.getPath(), 'insert_at', function () {
                    console.log('insert_at');
                    console.log(poly.indexID);
                    var newShape = poly;
                    newShape.indexID = selectedShape.indexID;

                    polyArr.forEach((element, index) => {
                        if (element.indexID === selectedShape.indexID) {
                            polyArr[index] = newShape;
                        }
                    });
                    //polyArr = [];
                    //polyArr.push(polyOld);

                });
                google.maps.event.addListener(poly.getPath(), 'remove_at', function () {
                    console.log('remove_at');
                    console.log(poly.indexID);

                    var newShape = poly;
                    newShape.indexID = selectedShape.indexID;

                    polyArr.forEach((element, index) => {
                        if (element.indexID === selectedShape.indexID) {
                            polyArr[index] = newShape;
                        }
                    });

                });
                google.maps.event.addListener(poly.getPath(), 'set_at', function () {
                    console.log('set_at');

                    console.log(poly.indexID);

                    var newShape = poly;
                    newShape.indexID = selectedShape.indexID;

                    polyArr.forEach((element, index) => {
                        if (element.indexID === selectedShape.indexID) {
                            polyArr[index] = newShape;
                        }
                    });
                });


            }

            //google.maps.event.addListener(map, 'click', function (event) {
            //    placeMarker(event.latLng);
            //    console.log(event.latLng.toUrlValue(5));
            //});

            //function placeMarker(location) {
            //    var marker = new google.maps.Marker({
            //        position: location,
            //        map: map
            //    });
            //    IsPointInPolygon(location);
            //}

            var drawingManager = new google.maps.drawing.DrawingManager({
                drawingMode: google.maps.drawing.OverlayType.MARKER,
                drawingControl: true,
                drawingControlOptions: {
                    position: google.maps.ControlPosition.TOP_CENTER,
                    drawingModes: [
                        //google.maps.drawing.OverlayType.MARKER,
                        //google.maps.drawing.OverlayType.CIRCLE,
                        google.maps.drawing.OverlayType.POLYGON,
                        //google.maps.drawing.OverlayType.RECTANGLE
                    ]
                },
                markerOptions: {
                    icon: 'images/beachflag.png'
                },
                //circleOptions: {
                //    fillColor: '#ffff00',
                //    fillOpacity: 0.2,
                //    strokeWeight: 3,
                //    clickable: false,
                //    editable: true,
                //    zIndex: 1
                //},
                polygonOptions: {
                    clickable: true,
                    draggable: false,
                    editable: true,
                    fillColor: '#ffff00',
                    fillOpacity: 0.2,

                },
                //rectangleOptions: {
                //    clickable: true,
                //    draggable: true,
                //    editable: true,
                //    fillColor: '#ffff00',
                //    fillOpacity: 0.5,
                //}
            });

            function clearSelection() {
                if (selectedShape) {
                    selectedShape.setEditable(false);
                    selectedShape.setDraggable(false);

                    selectedShape = null;
                }
            }

            function setSelection(shape) {
                console.log('setSelection' + shape.indexID);
                clearSelection();
                selectedShape = shape;
                //alert(shape.indexID);
                shape.setEditable(true);
                shape.setDraggable(true);
                //alert(shape.indexID);
                // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));
                // google.maps.event.addListener(selectedShape.getPath(), 'set_at', getPolygonCoords(shape));
            }

            function deleteSelectedShape() {
                if (selectedShape) {
                    selectedShape.setMap(null);
                    polyArr = polyArr.filter(item => item.indexID !== selectedShape.indexID);

                }
            }

            function deleteAllShape() {
                for (var i = 0; i < polyArr.length; i++) {
                    polyArr[i].setMap(null);
                }
                polyArr = [];
            }

            function CenterControl(controlDiv, map) {

                // Set CSS for the control border.
                var controlUI = document.createElement('div');
                controlUI.style.backgroundColor = '#fff';
                controlUI.style.border = '2px solid #fff';
                controlUI.style.borderRadius = '3px';
                controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
                controlUI.style.cursor = 'pointer';
                controlUI.style.marginBottom = '22px';
                controlUI.style.textAlign = 'center';
                controlUI.title = 'Select to delete the shape';
                controlDiv.appendChild(controlUI);

                // Set CSS for the control interior.
                var controlText = document.createElement('div');
                controlText.style.color = 'rgb(25,25,25)';
                controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
                controlText.style.fontSize = '16px';
                controlText.style.lineHeight = '38px';
                controlText.style.paddingLeft = '5px';
                controlText.style.paddingRight = '5px';
                controlText.innerHTML = 'Delete Selected Area';
                controlUI.appendChild(controlText);

                // Setup the click event listeners: simply set the map to Chicago.
                controlUI.addEventListener('click', function () {
                    deleteSelectedShape();
                    //deleteAllShape();
                });

            }
            drawingManager.setMap(map);
            var getPolygonCoords = function (newShape) {
                console.log("We are one");
                var len = newShape.getPath().getLength();
                for (var i = 0; i < len; i++) {
                    console.log(newShape.getPath().getAt(i).toUrlValue(6));
                }
            };

            google.maps.event.addListener(drawingManager, 'polygoncomplete', function (event) {

                google.maps.event.addListener(event.getPath(), 'insert_at', function () {
                    console.log('insert');
                    console.log(event.indexID);
                    var newShape = event;
                    newShape.indexID = selectedShape.indexID;

                    polyArr.forEach((element, index) => {
                        if (element.indexID === selectedShape.indexID) {
                            polyArr[index] = newShape;
                        }
                    });

                    //polyArr = [];
                    //polyArr.push(event);
                });
                google.maps.event.addListener(event.getPath(), 'set_at', function () {
                    console.log('set');
                    console.log(event.indexID);

                    var newShape = event;
                    newShape.indexID = selectedShape.indexID;

                    polyArr.forEach((element, index) => {
                        if (element.indexID === selectedShape.indexID) {
                            polyArr[index] = newShape;
                        }
                    });
                });
                google.maps.event.addListener(event.getPath(), 'remove_at', function () {
                    console.log('remove');
                    console.log(event.indexID);

                    var newShape = event;
                    newShape.indexID = selectedShape.indexID;

                    polyArr.forEach((element, index) => {
                        if (element.indexID === selectedShape.indexID) {
                            polyArr[index] = newShape;
                        }
                    });
                });
                google.maps.event.addListener(event, 'dragend', function () {
                    console.log('dragend');
                    console.log(event.indexID);

                    if (confirm('Are you sure you want change position of Area ?')) {
                        var newShape = event;
                        newShape.indexID = selectedShape.indexID;

                        polyArr.forEach((element, index) => {
                            if (element.indexID === selectedShape.indexID) {
                                polyArr[index] = newShape;
                            }
                        });
                    } else {
                        event.setMap(null);

                        //polyOld = polyDragStart;
                        event.setPath(polyDragStartCords);
                        //var poligonCoords = [];
                        console.log('dragend');
                        //event = polyDragStart;
                        event.setMap(map);
                        var newShape = event;
                        newShape.indexID = selectedShape.indexID;

                        polyArr.forEach((element, index) => {
                            if (element.indexID === selectedShape.indexID) {
                                polyArr[index] = newShape;
                            }
                        });
                        addListenersOnPolygon2(event);
                    }

                });
                google.maps.event.addListener(event, 'dragstart', function () {

                    console.log('dragstart');
                    console.log(event.indexID);
                    polyDragStart = event;
                    polyDragStartCords = getCoords(event);
                    //polyDragStartCords = getCoordsLatLong(event);
                });
            });

            google.maps.event.addListener(drawingManager, 'overlaycomplete', function (event) {
                console.log('complete');
                //polyArr = [];

                //polyArr.push(event.overlay);
                if ((event.type == google.maps.drawing.OverlayType.POLYGON) && (event.overlay.getPath().getLength() > 1)) {

                    //drawingManager.setDrawingMode(null);
                    //Write code to select the newly selected object.

                    var newShape = event.overlay;
                    newShape.type = event.type;
                    newShape.indexID = curIndexId;
                    curIndexId++;
                    polyArr.push(newShape);
                    //alert(newShape.indexID);
                    google.maps.event.addListener(newShape, 'click', function () {

                        setSelection(newShape);
                    });

                    setSelection(newShape);
                }
            });


            google.maps.event.addListener(drawingManager, "drawingmode_changed", function () {
                //deleteAllShape();
                if (drawingManager.getDrawingMode() == 'polygon') {

                    //deleteAllShape();
                }
            })

            var centerControlDiv = document.createElement('div');
            var centerControl = new CenterControl(centerControlDiv, map);

            centerControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);


        };

        function getCoords(poly) {
            var cords = [];
            if (poly) {
                var vertices = poly.getPath();
                for (let i = 0; i < vertices.getLength(); i++) {
                    var xy = vertices.getAt(i);
                    var obj = new Object();
                    obj.lat = xy.lat();
                    obj.lng = xy.lng();
                    //var point = new google.maps.LatLng(xy.lat(), xy.lng());
                    cords.push(obj);

                }
            }
            return cords;
        }

        function getCoordsLatLong(poly) {
            var cords = [];
            if (poly) {
                var vertices = poly.getPath();
                for (let i = 0; i < vertices.getLength(); i++) {
                    var xy = vertices.getAt(i);
                    var obj = new google.maps.LatLng(xy.lat(), xy.lng());
                    //var point = new google.maps.LatLng(xy.lat(), xy.lng());
                    cords.push(obj);

                }
            }
            return cords;
        }



        $("#btnEMPSave").click(function () {
            //alert(polyArr.length);
            if (polyArr.length == 0) {
                $("#BeatMaap_pop").html("Please Create Area...").delay(2000).show().fadeOut('slow');
                return false;
            }
            if ($('#hduserId').val() == '-1') {
                $("#BeatMaap_pop").html("Please Select User...").delay(2000).show().fadeOut('slow');
                return false;
            }
            var EBMObj = new Object();

            var CordArry = [];
            for (let i = 0; i < polyArr.length; i++) {

                CordArry.push(getCoords(polyArr[i]));
            }


            EBMObj.userId = parseInt($('#hduserId').val());
            EBMObj.ebmLatLong = CordArry;
            EBMObj.Type = $("#hduserType").val();
            EBMObj.ebmId = parseInt($('#hdebmId').val());
            var data = JSON.stringify({ 'EBMObj': EBMObj });


            $.ajax({
                type: "post",
                url: "/EmpBeatMap/SaveEmpBeatMap",
                data: data,
                contentType: 'application/json;',
                dataType: 'json',
                //traditional: true,
                success: function (data) {
                    //$('#myModal_Image_House').modal('toggle');
                    //LoadGrid();

                    //$("#DumpSave_pop").html("QR Status Saved Successfully...").delay(2000).show().fadeOut('slow');
                    location.href = 'Index';
                }
            });
        }
        );

        function IsPointInPolygon(location) {

            var EBMObj = new Object();
            var obj = new Object();
            var CordArry = [];
            obj.lat = location.lat();
            obj.lng = location.lng();
            CordArry.push(obj);
            EBMObj.userId = parseInt($('#hduserId').val());
            EBMObj.ebmLatLong = CordArry;
            EBMObj.Type = 'W';
            EBMObj.ebmId = parseInt($('#hdebmId').val());
            var data = JSON.stringify({ 'EBMObj': EBMObj });

            $.ajax({
                type: "post",
                url: "/EmpBeatMap/IsPointInPolygon",
                data: data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                //traditional: true,
                success: function (data) {
                    //$('#myModal_Image_House').modal('toggle');
                    //LoadGrid();

                    //$("#DumpSave_pop").html("QR Status Saved Successfully...").delay(2000).show().fadeOut('slow');
                    alert(data);
                }
            });


        }


        $("#btnEMPShow").click(function () {

            if ($('#selectnumber').val() == '-1') {
                alert("Please Select User");
                return false;
            }

            var userId = $('#selectnumber').val();


            $.ajax({
                type: "get",
                url: "/EmpBeatMap/GetEmpBeatMap?userId=" + userId,
                contentType: 'application/json;',
                dataType: 'json',
                //traditional: true,
                success: function (data) {
                    console.log(data);
                    //$('#myModal_Image_House').modal('toggle');
                    //LoadGrid();

                    //$("#DumpSave_pop").html("QR Status Saved Successfully...").delay(2000).show().fadeOut('slow');

                }
            });
        }
        );

    </script>

    <script>
        var date = new Date();

        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear();

        if (month < 10) month = "0" + month;
        if (day < 10) day = "0" + day;

        // var today = month+ "/" + day+ "/" + year;
        var today = day + "/" + month + "/" + year;
        document.getElementById('txt_fdate').value = today;

    </script>
    <script type="text/javascript">
        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
            weekStart: 1,
            color: 'red',
            pickTime: false
        }).on('changeDate', function (e) {

            $(this).datepicker('hide');

        });
        //hide  show on hover
        $('#txt_fdate').focus(function () {
            $('.dtpk_drpdwn').eq(1).hide();
        });

    </script>
    @*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnR8YLcfpwSLWXGO6JR3wFPY133r086DI&callback=myMap" type="text/javascript"></script>*@
    <script async
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnR8YLcfpwSLWXGO6JR3wFPY133r086DI&libraries=drawing&callback=runMaps">
    </script>
    @*Paid API*@
    @*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnR8YLcfpwSLWXGO6JR3wFPY133r086DI&callback=myMap" type="text/javascript"></script>*@

</fieldset>