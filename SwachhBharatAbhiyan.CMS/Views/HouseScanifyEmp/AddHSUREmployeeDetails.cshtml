@model SwachBharat.CMS.Bll.ViewModels.ChildModel.Model.UREmployeeDetailsVM

@{
    ViewBag.Title = "AddHSUREmployeeDetails";
    Layout = "~/Views/Shared/_HSLayout.cshtml";
}

<input type="hidden" value="@ViewBag.AppId" id="appid" />
<input type="hidden" value="@ViewBag.EmpId" id="qrEmpId" />

<br />

<div class="container">

    <div class="row">
        <span class="backk" style="margin-left: 15px;">

            <a href="@Url.Action("HSURIndex", "HouseScanifyEmp")" id="btnBack" class="btn btn-sm btn-primary filter-button-style"><span class="glyphicon glyphicon-circle-arrow-left"></span>  Back</a>

        </span>

        <h4 id="ulb_name" class="text-center" style="padding-left:14px;width:80%"></h4>

    </div>
    <br />


</div>

@using (Html.BeginForm("AddHSUREmployeeDetails", "HouseScanifyEmp", FormMethod.Post, new { enctype = "multipart/form-data", data_toggle = "validator", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EmpId);
    <div class="container" style="overflow-y:auto">
        <br />
        <center>  <h1 class="add-edit-h1 title_change"></h1></center>
        <div class="row">


            <div>@Html.ValidationSummary(true, "", new { @class = "text-danger" }) </div>
            <div class="panel panel-warning col-sm-12 ">
                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @*@Html.Label("नाव / Name")*@
                            @Html.Label("Name")
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.EmpName, new { @class = "form-control", style = "font-family:Arial, FontAwesome", autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                            <span class="text-danger" id="err_name"></span>
                            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @*@Html.Label("पत्ता / Address")*@
                            @Html.Label("Address")
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.EmpAddress, new { @class = "form-control", style = "font-family:Arial, FontAwesome", autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(model => model.EmpAddress, "", new { @class = "text-danger" })
                            <span class="text-danger" id="err_address"></span>
                            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                </div>



                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @*@Html.Label("लॉगिन आई डी / Login ID")*@
                            @Html.Label("Login ID")
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.LoginId, new { @class = "form-control", style = "font-family:Arial, FontAwesome", autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
                            <span class="text-danger" id="err_login"></span>
                            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @*@Html.Label("पासवर्ड / Password")*@
                            @Html.Label("Password")
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", style = "font-family:Arial, FontAwesome", autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <span class="text-danger" id="err_pw"></span>
                            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>
                </div>

                <div class="row">


                    <div class="col-md-6">
                        <div class="form-group">
                            @*@Html.Label("मोबाइल / Mobile")*@
                            @Html.Label("Mobile")
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.EmpMobileNumber, new { @class = "form-control", style = "font-family:Arial, FontAwesome", minlength = "10", maxlength = "10", autocomplete = "off", required = "required" })
                            @Html.ValidationMessageFor(model => model.EmpMobileNumber, "", new { @class = "text-danger" })
                            <span class="text-danger" id="err_mobile"></span>
                            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                            <span class="help-block with-errors"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @*@Html.Label("मोबाइल / Mobile")*@
                            @Html.Label("User Role")
                            @{ var RlistItems = new List<SelectListItem>();

                                RlistItems.Add(new SelectListItem { Text = "Select User Role", Value = "0" });
                                RlistItems.Add(new SelectListItem { Text = "Admin", Value = "A" });
                                RlistItems.Add(new SelectListItem { Text = "SubAdmin", Value = "SA" });

                            }
                            @Html.DropDownListFor(model => model.type, RlistItems, new { style = "font-family:Arial, FontAwesome", required = "required", @class = "form-control RequiredInput validate[required] RequiredInput" })
                        </div>
                    </div>
                </div>
                <div class="row">


                    <div class="col-md-2">
                        <br />
                        <div class="form-group" style="margin-top:10px">
                            <label>Is Active </label>
                            @Html.CheckBox("isActive")
                        </div>

                    </div>

                </div>
                <br />
                <center id="hur" style="padding-right: 14%;">
                    <h4>User Rights</h4>
                    <input id="searchbar_ulb" onkeyup="search_ulb()" type="text" name="search" placeholder="Search ">
                    <span style="float: right; margin-left: -10%; }"><input type="checkbox" class="selectall" /> <span style="font-size: 15px;font-weight:bold">Select All</span></span>

                </center>

                <div class="row" id="checkUR">


                    <div class="container py-4">

                        <table class="table table-hover">




                            @*@Html.Label("रक्त गट / Blood Group ")*@
                            @for (int i = 0; i < Model.CheckAppDs.Count; i++)
                            {



                                if (i % 4 == 0)
                                {


                                    <tr></tr>



                                }
                                else
                                {
                                    <td class="ulbs">

                                        @Html.CheckBoxFor(x => x.CheckAppDs[i].IsCheked, new { @class = "custom-checkbox individual" })
                                        <label>@Model.CheckAppDs[i].App_Name</label>
                                        @Html.HiddenFor(x => x.CheckAppDs[i].AppId)
                                        @Html.HiddenFor(x => x.CheckAppDs[i].App_Name)
                                    </td>
                                }
                                if (i % 4 == 0)
                                {
                                    <td class="ulbs">
                                        @Html.CheckBoxFor(x => x.CheckAppDs[i].IsCheked, new { @class = "custom-checkbox individual" })
                                        <label>@Model.CheckAppDs[i].App_Name</label>
                                        @Html.HiddenFor(x => x.CheckAppDs[i].AppId)
                                        @Html.HiddenFor(x => x.CheckAppDs[i].App_Name)
                                    </td>
                                }

                            }




                        </table>
                        <span class="text-danger" id="err_pw"></span>
                        <span class="help-block with-errors"></span>



                    </div>

                </div>

                <div class="row">
                    <center><span class="text-danger" id="err_generate"></span></center>
                    <div class="offset-6 col-md-3">
                        <button type="submit" name="submit" class="btn btn-sm btn-success filter-button-style" id="btnSubmit" onclick="return Validate()">

                            <span class="glyphicon glyphicon-saved"></span>
                            <span id="buttonName">Save Changes</span>
                        </button>

                    </div>
                    <div class="form-group1">

                    </div>
                </div>
            </div>

        </div>
    </div>
}

<script>
    $(".selectall").click(function () {
        $(".individual").prop("checked", $(this).prop("checked"));
    });
    $(document).ready(function () {
        // var ulb_menu=JSON.parse(window.localStorage.getItem("ulb_menu"));
        
        var appid = $('#appid').val();
        var Utype = $('#type').val();
        if (Utype == 'A') {
            $('#checkUR').hide();
            $('#hur').hide();

        }
        else {
            $('#checkUR').show();
            $('#hur').show();
        }


        var id = $('#qrEmpId').val();
        if (id > 0) {
            $('#buttonName').text("Save Changes");
            //$('.title_change').text("कर्मचारी तपशील सादर बदला / Edit Employee Details");
            $('.title_change').text("Edit User Details");
        } else {
            $('#buttonName').text("Save");
            //$('.title_change').text("कर्मचारी तपशील सादर करा / Add  Employee Details");
            $('.title_change').text("Add  User Details");
        }



        //imei Validation and clear login validation

        if ($("#imoNo").val().trim() != "") {
            $('#check').not(this).prop('checked', false);
        }
        else {

            $('#check').not(this).prop('checked', true);
        }



        /////////


        //input Validations

        $("#qrEmpMobileNumber").keypress(function (e) {
            //if the letter is not digit then display error and don't type anything
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57) && e.which != 44) {
                //display error message
                //$("#err_mobile").html("केवल अंक | Digits Only").show().delay(1500).show().fadeOut('slow');
                $("#err_mobile").html("Digits Only").show().delay(1500).show().fadeOut('slow');
                return false;
            }
        });





        $("#btnSubmit").click(function () {
            
            if ($.trim($("#qrEmpName").val()) == '') {
                //$("#err_name").html("नाव आवश्यक आहे / Name is Required").delay(1500).show().fadeOut('slow');
                $("#err_name").html("Name is Required").delay(1500).show().fadeOut('slow');
                $('#qrEmpName').focus();
                return false;
            }
            if ($.trim($("#qrEmpAddress").val()) == '') {
                //$("#err_address").html("पत्ता  आवश्यक आहे / Address is Required").delay(1500).show().fadeOut('slow');
                $("#err_address").html("Address is Required").delay(1500).show().fadeOut('slow');
                $('#qrEmpAddress').focus();
                return false;
            }

            if ($.trim($("#qrEmpMobileNumber").val()) == '') {
                //$("#err_mobile").html("मोबाइल नंबर आवश्यक आहे / Mobile Number is Required").delay(1500).show().fadeOut('slow');
                $("#err_mobile").html("Mobile Number is Required").delay(1500).show().fadeOut('slow');
                $('#qrEmpMobileNumber').focus();
                return false;
            }

            if ($.trim($("#qrEmpLoginId").val()) == '') {
                //$("#err_login").html("लॉगिन आईडी आवश्यक आहे / Login ID is Required").delay(1500).show().fadeOut('slow');
                $("#err_login").html("Login ID is Required").delay(1500).show().fadeOut('slow');
                $('#qrEmpLoginId').focus();
                return false;
            }

            if ($.trim($("#qrEmpPassword").val()) == '') {
                //$("#err_pw").html("पासवर्डआवश्यक आहे / Password is Required").delay(1500).show().fadeOut('slow');
                $("#err_pw").html("Password is Required").delay(1500).show().fadeOut('slow');
                $('#qrEmpPassword').focus();
                return false;
            }


            return true;
        });
    });

    $("#LoginId").keyup(function () {
        

        var LoginId = $("#LoginId").val();
        $.ajax({
            url: "/HouseScanifyEmp/IsLoginIdExists?LoginId=" + LoginId,
            type: "POST",
            data: { LoginId: LoginId }
        })
            .done(function (msg) {
                if (msg == 1) {
                    $('#err_login').text('This Is Already Exist LoginId!');
                } else {
                    $('#err_login').text('');
                }
            });
    });
    $('#type').change(function () {
        var Utype = $('#type').val();
        if (Utype == 'A') {
            $('#checkUR').hide();
            $('#hur').hide();
        }
        else {
            $('#checkUR').show();
            $('#hur').show();
        }

    });
    // JavaScript code
    function search_ulb() {
        
        let input = document.getElementById('searchbar_ulb').value
        input = input.toLowerCase();
        let x = document.getElementsByClassName('ulbs');

        for (i = 0; i < x.length; i++) {
            if (!x[i].innerHTML.toLowerCase().includes(input)) {
                x[i].style.display = "none";
            }
            else {
                x[i].style.display = "block";
            }
        }
    }
</script>

