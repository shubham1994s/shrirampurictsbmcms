//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SwachBharat.CMS.Dal.DataContexts
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DevChildSwachhBharatNagpurEntities : DbContext
    {
        public DevChildSwachhBharatNagpurEntities(int AppId)
               : base(SwachBharatAppConnection.GetConnectionString(AppId))
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GarbagePointDetail> GarbagePointDetails { get; set; }
        public virtual DbSet<Qr_Employee_Daily_Attendance> Qr_Employee_Daily_Attendance { get; set; }
        public virtual DbSet<GamePlayerDetail> GamePlayerDetails { get; set; }
        public virtual DbSet<Qr_Location> Qr_Location { get; set; }
        public virtual DbSet<WM_GarbageCategory> WM_GarbageCategory { get; set; }
        public virtual DbSet<WM_GarbageSubCategory> WM_GarbageSubCategory { get; set; }
        public virtual DbSet<WM_Garbage_Details> WM_Garbage_Details { get; set; }
        public virtual DbSet<WM_Garbage_Summary> WM_Garbage_Summary { get; set; }
        public virtual DbSet<ZoneMaster> ZoneMasters { get; set; }
        public virtual DbSet<VehicleType> VehicleTypes { get; set; }
        public virtual DbSet<TeritoryMaster> TeritoryMasters { get; set; }
        public virtual DbSet<WardNumber> WardNumbers { get; set; }
        public virtual DbSet<QrEmployeeMaster> QrEmployeeMasters { get; set; }
        public virtual DbSet<SS_1_4_ANSWER> SS_1_4_ANSWER { get; set; }
        public virtual DbSet<SS_1_4_QUESTION> SS_1_4_QUESTION { get; set; }
        public virtual DbSet<GramCleaningComplient> GramCleaningComplients { get; set; }
        public virtual DbSet<SS_1_7_ANSWER> SS_1_7_ANSWER { get; set; }
        public virtual DbSet<WM_Garbage_Sales> WM_Garbage_Sales { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Vw_MsgNotification> Vw_MsgNotification { get; set; }
        public virtual DbSet<MonthlyAttedance> MonthlyAttedances { get; set; }
        public virtual DbSet<StreetSweepingBeat> StreetSweepingBeats { get; set; }
        public virtual DbSet<HouseMaster> HouseMasters { get; set; }
        public virtual DbSet<VW_HSGetHouseDetails> VW_HSGetHouseDetails { get; set; }
        public virtual DbSet<VW_HSGetDumpyardDetails> VW_HSGetDumpyardDetails { get; set; }
        public virtual DbSet<VW_HSGetLiquidDetails> VW_HSGetLiquidDetails { get; set; }
        public virtual DbSet<VW_HSGetStreetDetails> VW_HSGetStreetDetails { get; set; }
        public virtual DbSet<EmpBeatMap> EmpBeatMaps { get; set; }
        public virtual DbSet<Vehical_QR_Master> Vehical_QR_Master { get; set; }
        public virtual DbSet<VehicleRegistration> VehicleRegistrations { get; set; }
        public virtual DbSet<GarbageCollectionDetail> GarbageCollectionDetails { get; set; }
        public virtual DbSet<SauchalayAddress> SauchalayAddresses { get; set; }
        public virtual DbSet<EmpShift> EmpShifts { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<MasterQR> MasterQRs { get; set; }
        public virtual DbSet<HouseList> HouseLists { get; set; }
        public virtual DbSet<Daily_Attendance> Daily_Attendance { get; set; }
        public virtual DbSet<DumpYardDetail> DumpYardDetails { get; set; }
        public virtual DbSet<LiquidWasteDetail> LiquidWasteDetails { get; set; }
        public virtual DbSet<StreetSweepingDetail> StreetSweepingDetails { get; set; }
    
        public virtual ObjectResult<GetAttendenceDetailsTotal_Result> GetAttendenceDetailsTotal(Nullable<int> userId, Nullable<int> year, Nullable<int> month)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAttendenceDetailsTotal_Result>("GetAttendenceDetailsTotal", userIdParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<CollecctionArea_Result> CollecctionArea(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CollecctionArea_Result>("CollecctionArea", typeParameter);
        }
    
        public virtual ObjectResult<CurrentAllUserLocation_Result3> CurrentAllUserLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CurrentAllUserLocation_Result3>("CurrentAllUserLocation");
        }
    
        public virtual ObjectResult<SP_Dashboard_Details_Result2> SP_Dashboard_Details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Dashboard_Details_Result2>("SP_Dashboard_Details");
        }
    
        public virtual ObjectResult<PointDetails_Result> PointDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PointDetails_Result>("PointDetails");
        }
    
        public virtual ObjectResult<CurrentAllUserLocationTest1_Result> CurrentAllUserLocationTest1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CurrentAllUserLocationTest1_Result>("CurrentAllUserLocationTest1");
        }
    
        public virtual ObjectResult<SP_Collection_Count_Result> SP_Collection_Count(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Collection_Count_Result>("SP_Collection_Count", fdateParameter, tdateParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_DumpYardDetails_Result> SP_DumpYardDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DumpYardDetails_Result>("SP_DumpYardDetails");
        }
    
        public virtual ObjectResult<SP_EmployeeTarget_Result> SP_EmployeeTarget(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeTarget_Result>("SP_EmployeeTarget", fdateParameter, tdateParameter, useridParameter);
        }
    
        public virtual ObjectResult<RPT_ONE_POINT_FOUR_SHOW_Result> RPT_ONE_POINT_FOUR_SHOW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ONE_POINT_FOUR_SHOW_Result>("RPT_ONE_POINT_FOUR_SHOW");
        }
    
        public virtual ObjectResult<RPT_ONE_POINT_Five_SHOW_Result> RPT_ONE_POINT_Five_SHOW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ONE_POINT_Five_SHOW_Result>("RPT_ONE_POINT_Five_SHOW");
        }
    
        public virtual ObjectResult<RPT_ONE_POINT_Six_SHOW_Result> RPT_ONE_POINT_Six_SHOW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ONE_POINT_Six_SHOW_Result>("RPT_ONE_POINT_Six_SHOW");
        }
    
        public virtual ObjectResult<HouseDetails_ReferanceId_Result> HouseDetails_ReferanceId(string referanceId)
        {
            var referanceIdParameter = referanceId != null ?
                new ObjectParameter("ReferanceId", referanceId) :
                new ObjectParameter("ReferanceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HouseDetails_ReferanceId_Result>("HouseDetails_ReferanceId", referanceIdParameter);
        }
    
        public virtual ObjectResult<RPT_1POINT7_DETAILS_Result> RPT_1POINT7_DETAILS(Nullable<int> iNSERT_ID)
        {
            var iNSERT_IDParameter = iNSERT_ID.HasValue ?
                new ObjectParameter("INSERT_ID", iNSERT_ID) :
                new ObjectParameter("INSERT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_1POINT7_DETAILS_Result>("RPT_1POINT7_DETAILS", iNSERT_IDParameter);
        }
    
        public virtual ObjectResult<RPT_1point7_questions_Result> RPT_1point7_questions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_1point7_questions_Result>("RPT_1point7_questions");
        }
    
        public virtual ObjectResult<RPT_ONE_POINT_Eight_SHOW_Result> RPT_ONE_POINT_Eight_SHOW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ONE_POINT_Eight_SHOW_Result>("RPT_ONE_POINT_Eight_SHOW");
        }
    
        public virtual ObjectResult<RPT_ONE_POINT_SEVEN_SHOW_Result> RPT_ONE_POINT_SEVEN_SHOW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ONE_POINT_SEVEN_SHOW_Result>("RPT_ONE_POINT_SEVEN_SHOW");
        }
    
        public virtual ObjectResult<RPT_1POINT9_DETAILS_Result> RPT_1POINT9_DETAILS(Nullable<int> iNSERT_ID)
        {
            var iNSERT_IDParameter = iNSERT_ID.HasValue ?
                new ObjectParameter("INSERT_ID", iNSERT_ID) :
                new ObjectParameter("INSERT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_1POINT9_DETAILS_Result>("RPT_1POINT9_DETAILS", iNSERT_IDParameter);
        }
    
        public virtual ObjectResult<RPT_ONE_POINT_NINE_SHOW_Result> RPT_ONE_POINT_NINE_SHOW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ONE_POINT_NINE_SHOW_Result>("RPT_ONE_POINT_NINE_SHOW");
        }
    
        public virtual ObjectResult<SP_GetLiveTracking_Result> SP_GetLiveTracking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetLiveTracking_Result>("SP_GetLiveTracking");
        }
    
        public virtual ObjectResult<SP_EmployeeSummary_Result> SP_EmployeeSummary(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userid)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeSummary_Result>("SP_EmployeeSummary", fromParameter, toParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_IdelTime_Result> SP_IdelTime(Nullable<int> userId, Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IdelTime_Result>("SP_IdelTime", userIdParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<SP_GarbageCollection_Result> SP_GarbageCollection(Nullable<int> appId, Nullable<int> userid, Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> zoneId, Nullable<int> areaId, Nullable<int> wardNo)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("appId", appId) :
                new ObjectParameter("appId", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var wardNoParameter = wardNo.HasValue ?
                new ObjectParameter("WardNo", wardNo) :
                new ObjectParameter("WardNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GarbageCollection_Result>("SP_GarbageCollection", appIdParameter, useridParameter, fdateParameter, tdateParameter, zoneIdParameter, areaIdParameter, wardNoParameter);
        }
    
        public virtual ObjectResult<SP_EmployeeHouseCollectionType_Result> SP_EmployeeHouseCollectionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeHouseCollectionType_Result>("SP_EmployeeHouseCollectionType");
        }
    
        public virtual ObjectResult<SP_LiquidWasteDetails_Result> SP_LiquidWasteDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LiquidWasteDetails_Result>("SP_LiquidWasteDetails");
        }
    
        public virtual ObjectResult<SP_StreetSweepDetails_Result> SP_StreetSweepDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StreetSweepDetails_Result>("SP_StreetSweepDetails");
        }
    
        public virtual ObjectResult<SP_LSEmployeeSummary_Result> SP_LSEmployeeSummary(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userid, string emptype)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var emptypeParameter = emptype != null ?
                new ObjectParameter("Emptype", emptype) :
                new ObjectParameter("Emptype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LSEmployeeSummary_Result>("SP_LSEmployeeSummary", fromParameter, toParameter, useridParameter, emptypeParameter);
        }
    
        public virtual ObjectResult<SP_IdelTimeLiquid_Result> SP_IdelTimeLiquid(Nullable<int> userId, Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IdelTimeLiquid_Result>("SP_IdelTimeLiquid", userIdParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<LiquidCurrentAllUserLocationTest1_Result> LiquidCurrentAllUserLocationTest1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LiquidCurrentAllUserLocationTest1_Result>("LiquidCurrentAllUserLocationTest1");
        }
    
        public virtual ObjectResult<SP_LWaste_Count_Result> SP_LWaste_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LWaste_Count_Result>("SP_LWaste_Count");
        }
    
        public virtual ObjectResult<SP_SSEmployeeSummary_Result> SP_SSEmployeeSummary(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userid, string emptype)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var emptypeParameter = emptype != null ?
                new ObjectParameter("Emptype", emptype) :
                new ObjectParameter("Emptype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SSEmployeeSummary_Result>("SP_SSEmployeeSummary", fromParameter, toParameter, useridParameter, emptypeParameter);
        }
    
        public virtual ObjectResult<SP_IdelTimestreet_Result> SP_IdelTimestreet(Nullable<int> userId, Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IdelTimestreet_Result>("SP_IdelTimestreet", userIdParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<SP_SSweeping_Count_Result> SP_SSweeping_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SSweeping_Count_Result>("SP_SSweeping_Count");
        }
    
        public virtual ObjectResult<SP_LiquidEmployeeTarget_Result> SP_LiquidEmployeeTarget(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LiquidEmployeeTarget_Result>("SP_LiquidEmployeeTarget", fdateParameter, tdateParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_StreetEmployeeTarget_Result> SP_StreetEmployeeTarget(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StreetEmployeeTarget_Result>("SP_StreetEmployeeTarget", fdateParameter, tdateParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_EmployeeLiquidCollectionType_Result> SP_EmployeeLiquidCollectionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeLiquidCollectionType_Result>("SP_EmployeeLiquidCollectionType");
        }
    
        public virtual ObjectResult<SP_EmployeeStreetCollectionType_Result> SP_EmployeeStreetCollectionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeStreetCollectionType_Result>("SP_EmployeeStreetCollectionType");
        }
    
        public virtual ObjectResult<SP_LiquidDashboard_Details_Result> SP_LiquidDashboard_Details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LiquidDashboard_Details_Result>("SP_LiquidDashboard_Details");
        }
    
        public virtual ObjectResult<SP_StreetDashboard_Details_Result> SP_StreetDashboard_Details()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StreetDashboard_Details_Result>("SP_StreetDashboard_Details");
        }
    
        public virtual ObjectResult<StreetCurrentAllUserLocationTest1_Result> StreetCurrentAllUserLocationTest1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StreetCurrentAllUserLocationTest1_Result>("StreetCurrentAllUserLocationTest1");
        }
    
        public virtual ObjectResult<SP_HouseScanify_Result> SP_HouseScanify(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HouseScanify_Result>("SP_HouseScanify", fdateParameter, tdateParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_HouseOnMapDetails_Result> SP_HouseOnMapDetails(Nullable<System.DateTime> gcDate, Nullable<int> userId, Nullable<int> zoneId, Nullable<int> areaId, Nullable<int> wardNo, Nullable<int> garbageType, Nullable<int> filterType)
        {
            var gcDateParameter = gcDate.HasValue ?
                new ObjectParameter("gcDate", gcDate) :
                new ObjectParameter("gcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var wardNoParameter = wardNo.HasValue ?
                new ObjectParameter("WardNo", wardNo) :
                new ObjectParameter("WardNo", typeof(int));
    
            var garbageTypeParameter = garbageType.HasValue ?
                new ObjectParameter("GarbageType", garbageType) :
                new ObjectParameter("GarbageType", typeof(int));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HouseOnMapDetails_Result>("SP_HouseOnMapDetails", gcDateParameter, userIdParameter, zoneIdParameter, areaIdParameter, wardNoParameter, garbageTypeParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<SP_LiquidWasteOnMapDetails_Result> SP_LiquidWasteOnMapDetails(Nullable<System.DateTime> gcDate, Nullable<int> userId, Nullable<int> zoneId, Nullable<int> areaId, Nullable<int> wardNo, Nullable<int> garbageType, Nullable<int> filterType)
        {
            var gcDateParameter = gcDate.HasValue ?
                new ObjectParameter("gcDate", gcDate) :
                new ObjectParameter("gcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var wardNoParameter = wardNo.HasValue ?
                new ObjectParameter("WardNo", wardNo) :
                new ObjectParameter("WardNo", typeof(int));
    
            var garbageTypeParameter = garbageType.HasValue ?
                new ObjectParameter("GarbageType", garbageType) :
                new ObjectParameter("GarbageType", typeof(int));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LiquidWasteOnMapDetails_Result>("SP_LiquidWasteOnMapDetails", gcDateParameter, userIdParameter, zoneIdParameter, areaIdParameter, wardNoParameter, garbageTypeParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<SP_StreetSweepingOnMapDetails_Result> SP_StreetSweepingOnMapDetails(Nullable<System.DateTime> gcDate, Nullable<int> userId, Nullable<int> zoneId, Nullable<int> areaId, Nullable<int> wardNo, Nullable<int> garbageType, Nullable<int> filterType)
        {
            var gcDateParameter = gcDate.HasValue ?
                new ObjectParameter("gcDate", gcDate) :
                new ObjectParameter("gcDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var areaIdParameter = areaId.HasValue ?
                new ObjectParameter("AreaId", areaId) :
                new ObjectParameter("AreaId", typeof(int));
    
            var wardNoParameter = wardNo.HasValue ?
                new ObjectParameter("WardNo", wardNo) :
                new ObjectParameter("WardNo", typeof(int));
    
            var garbageTypeParameter = garbageType.HasValue ?
                new ObjectParameter("GarbageType", garbageType) :
                new ObjectParameter("GarbageType", typeof(int));
    
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StreetSweepingOnMapDetails_Result>("SP_StreetSweepingOnMapDetails", gcDateParameter, userIdParameter, zoneIdParameter, areaIdParameter, wardNoParameter, garbageTypeParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<HouseDetails_Result> HouseDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HouseDetails_Result>("HouseDetails");
        }
    
        public virtual ObjectResult<SP_EmployeeHouseCollectionTime_Result> SP_EmployeeHouseCollectionTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeHouseCollectionTime_Result>("SP_EmployeeHouseCollectionTime");
        }
    
        public virtual ObjectResult<SP_GetEmpWiseHouseScan_Result> SP_GetEmpWiseHouseScan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmpWiseHouseScan_Result>("SP_GetEmpWiseHouseScan");
        }
    
        public virtual ObjectResult<SP_StreetSweepList_Result> SP_StreetSweepList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StreetSweepList_Result>("SP_StreetSweepList");
        }
    
        public virtual ObjectResult<SP_EmployeeSummary_NEW_Result> SP_EmployeeSummary_NEW(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userid)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeSummary_NEW_Result>("SP_EmployeeSummary_NEW", fromParameter, toParameter, useridParameter);
        }
    
        public virtual ObjectResult<SP_GetHSHouseDetails_Result> SP_GetHSHouseDetails(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid, Nullable<int> qrStatus, string sortColumn, string sortOrder, Nullable<int> offsetValue, Nullable<int> pagingSize, string searchText)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var qrStatusParameter = qrStatus.HasValue ?
                new ObjectParameter("qrStatus", qrStatus) :
                new ObjectParameter("qrStatus", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var offsetValueParameter = offsetValue.HasValue ?
                new ObjectParameter("OffsetValue", offsetValue) :
                new ObjectParameter("OffsetValue", typeof(int));
    
            var pagingSizeParameter = pagingSize.HasValue ?
                new ObjectParameter("PagingSize", pagingSize) :
                new ObjectParameter("PagingSize", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHSHouseDetails_Result>("SP_GetHSHouseDetails", fdateParameter, tdateParameter, useridParameter, qrStatusParameter, sortColumnParameter, sortOrderParameter, offsetValueParameter, pagingSizeParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GetHSHouseDetailsID(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid, Nullable<int> qrStatus, string sortColumn, string sortOrder, string searchText)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var qrStatusParameter = qrStatus.HasValue ?
                new ObjectParameter("qrStatus", qrStatus) :
                new ObjectParameter("qrStatus", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GetHSHouseDetailsID", fdateParameter, tdateParameter, useridParameter, qrStatusParameter, sortColumnParameter, sortOrderParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SP_GetHSHouseDetailsById_Result> SP_GetHSHouseDetailsById(Nullable<int> houseid)
        {
            var houseidParameter = houseid.HasValue ?
                new ObjectParameter("houseid", houseid) :
                new ObjectParameter("houseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHSHouseDetailsById_Result>("SP_GetHSHouseDetailsById", houseidParameter);
        }
    
        public virtual ObjectResult<SP_GetHSHouseDetailsnew_Result> SP_GetHSHouseDetailsnew(Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate, Nullable<int> userid, Nullable<int> qrStatus, string sortColumn, string sortOrder, Nullable<int> offsetValue, Nullable<int> pagingSize, string searchText)
        {
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var qrStatusParameter = qrStatus.HasValue ?
                new ObjectParameter("qrStatus", qrStatus) :
                new ObjectParameter("qrStatus", typeof(int));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(string));
    
            var offsetValueParameter = offsetValue.HasValue ?
                new ObjectParameter("OffsetValue", offsetValue) :
                new ObjectParameter("OffsetValue", typeof(int));
    
            var pagingSizeParameter = pagingSize.HasValue ?
                new ObjectParameter("PagingSize", pagingSize) :
                new ObjectParameter("PagingSize", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetHSHouseDetailsnew_Result>("SP_GetHSHouseDetailsnew", fdateParameter, tdateParameter, useridParameter, qrStatusParameter, sortColumnParameter, sortOrderParameter, offsetValueParameter, pagingSizeParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<Spbeatmapstatus_Result> Spbeatmapstatus(Nullable<int> userid, Nullable<System.DateTime> fdate, Nullable<System.DateTime> tdate)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fdateParameter = fdate.HasValue ?
                new ObjectParameter("fdate", fdate) :
                new ObjectParameter("fdate", typeof(System.DateTime));
    
            var tdateParameter = tdate.HasValue ?
                new ObjectParameter("tdate", tdate) :
                new ObjectParameter("tdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Spbeatmapstatus_Result>("Spbeatmapstatus", useridParameter, fdateParameter, tdateParameter);
        }
    
        public virtual ObjectResult<GetVehicleDetails_Result> GetVehicleDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVehicleDetails_Result>("GetVehicleDetails");
        }
    
        public virtual ObjectResult<VehicalRegDetails_Result> VehicalRegDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VehicalRegDetails_Result>("VehicalRegDetails");
        }
    
        public virtual ObjectResult<SP_HouseScanify_Count_Result> SP_HouseScanify_Count(Nullable<int> appid)
        {
            var appidParameter = appid.HasValue ?
                new ObjectParameter("Appid", appid) :
                new ObjectParameter("Appid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HouseScanify_Count_Result>("SP_HouseScanify_Count", appidParameter);
        }
    
        public virtual ObjectResult<SP_HouseScanifyDetails_Result> SP_HouseScanifyDetails(Nullable<int> appid)
        {
            var appidParameter = appid.HasValue ?
                new ObjectParameter("Appid", appid) :
                new ObjectParameter("Appid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HouseScanifyDetails_Result>("SP_HouseScanifyDetails", appidParameter);
        }
    
        public virtual ObjectResult<SP_EmployeeHouseCollectionCount_Result> SP_EmployeeHouseCollectionCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EmployeeHouseCollectionCount_Result>("SP_EmployeeHouseCollectionCount");
        }
    
        public virtual ObjectResult<SP_TotalHouseCollection_Count_Result> SP_TotalHouseCollection_Count(Nullable<System.DateTime> gcdate, Nullable<int> appId)
        {
            var gcdateParameter = gcdate.HasValue ?
                new ObjectParameter("gcdate", gcdate) :
                new ObjectParameter("gcdate", typeof(System.DateTime));
    
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("AppId", appId) :
                new ObjectParameter("AppId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TotalHouseCollection_Count_Result>("SP_TotalHouseCollection_Count", gcdateParameter, appIdParameter);
        }
    
        public virtual ObjectResult<MasterQRDetails_Result> MasterQRDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MasterQRDetails_Result>("MasterQRDetails");
        }
    
        public virtual ObjectResult<SP_CalcMinRouteDist_Result> SP_CalcMinRouteDist(string route, Nullable<double> compDist)
        {
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            var compDistParameter = compDist.HasValue ?
                new ObjectParameter("CompDist", compDist) :
                new ObjectParameter("CompDist", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CalcMinRouteDist_Result>("SP_CalcMinRouteDist", routeParameter, compDistParameter);
        }
    
        public virtual ObjectResult<SP_HouseOnMapDetailsForEmpBitMap_Result> SP_HouseOnMapDetailsForEmpBitMap(string empType)
        {
            var empTypeParameter = empType != null ?
                new ObjectParameter("EmpType", empType) :
                new ObjectParameter("EmpType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HouseOnMapDetailsForEmpBitMap_Result>("SP_HouseOnMapDetailsForEmpBitMap", empTypeParameter);
        }
    }
}
